{"ast":null,"code":"var Options = require('options'),\n  util = require('util'),\n  url = require('url'),\n  querystring = require('querystring'),\n  events = require('events'),\n  SSEClient = require('./sseclient');\nRegExp.quote = function (str) {\n  return (str + '').replace(/[.?*+^$[\\]\\\\(){}|-]/g, \"\\\\$&\");\n};\nmodule.exports = SSE;\nmodule.exports.Client = SSEClient;\nfunction SSE(httpServer, options) {\n  options = new Options({\n    path: '/sse',\n    verifyRequest: null\n  }).merge(options);\n  this.server = httpServer;\n  var oldListeners = this.server.listeners('request');\n  this.server.removeAllListeners('request');\n  var self = this;\n  this.server.on('request', function (req, res) {\n    var u = url.parse(req.url);\n    var pathname = u.pathname.replace(/^\\/{2,}/, '/');\n    if (self.matchesPath(pathname, options.value.path) && (options.value.verifyRequest == null || options.value.verifyRequest(req))) {\n      self.handleRequest(req, res, u.query);\n    } else {\n      for (var i = 0, l = oldListeners.length; i < l; ++i) {\n        oldListeners[i].call(self.server, req, res);\n      }\n    }\n  });\n}\nutil.inherits(SSE, events.EventEmitter);\nSSE.prototype.handleRequest = function (req, res, query) {\n  var client = new SSEClient(req, res);\n  client.initialize();\n  this.emit('connection', client, querystring.parse(query));\n};\nSSE.prototype.matchesPath = function (queryPath, matchPath) {\n  var match = RegExp.quote(matchPath).replace('\\\\*', '.*');\n  return RegExp('^' + match + '$').test(queryPath);\n};","map":{"version":3,"names":["Options","require","util","url","querystring","events","SSEClient","RegExp","quote","str","replace","module","exports","SSE","Client","httpServer","options","path","verifyRequest","merge","server","oldListeners","listeners","removeAllListeners","self","on","req","res","u","parse","pathname","matchesPath","value","handleRequest","query","i","l","length","call","inherits","EventEmitter","prototype","client","initialize","emit","queryPath","matchPath","match","test"],"sources":["/Users/sergionahas/honeyhive/honeyhive-playground/static/node_modules/sse/lib/sse.js"],"sourcesContent":["var Options = require('options')\n  , util = require('util')\n  , url = require('url')\n  , querystring = require('querystring')\n  , events = require('events')\n  , SSEClient = require('./sseclient');\n\nRegExp.quote = function(str) {\n  return (str+'').replace(/[.?*+^$[\\]\\\\(){}|-]/g, \"\\\\$&\");\n};\n\nmodule.exports = SSE;\nmodule.exports.Client = SSEClient;\n\nfunction SSE(httpServer, options) {\n  options = new Options({\n    path          : '/sse',\n    verifyRequest : null\n  }).merge(options);\n  this.server = httpServer;\n  var oldListeners = this.server.listeners('request');\n  this.server.removeAllListeners('request');\n  var self = this;\n  this.server.on('request', function(req, res) {\n    var u = url.parse(req.url);\n    var pathname = u.pathname.replace(/^\\/{2,}/, '/');\n    if (self.matchesPath(pathname, options.value.path) && (options.value.verifyRequest == null || options.value.verifyRequest(req))) {\n      self.handleRequest(req, res, u.query);\n    }\n    else {\n      for (var i = 0, l = oldListeners.length; i < l; ++i) {\n        oldListeners[i].call(self.server, req, res);\n      }\n    }\n  });\n}\n\nutil.inherits(SSE, events.EventEmitter);\n\nSSE.prototype.handleRequest = function(req, res, query) {\n  var client = new SSEClient(req, res);\n  client.initialize();\n  this.emit('connection', client, querystring.parse(query));\n}\n\nSSE.prototype.matchesPath = function(queryPath, matchPath) {\n  var match = RegExp.quote(matchPath).replace('\\\\*', '.*');\n  return RegExp('^' + match + '$').test(queryPath);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}